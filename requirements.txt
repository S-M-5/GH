# ============================================================================
# Green Hydrogen Electrolyzer Predictive Maintenance System
# Requirements File - Production Ready
# Python 3.8+ Required
# ============================================================================

# Core Dependencies
# ----------------------------------------------------------------------------
streamlit>=1.33,<2
pandas>=2.1,<3
numpy>=1.26,<3
plotly>=5.18
scipy>=1.10
scikit-learn>=1.3
openpyxl>=3.1.2
xlrd>=2.0.1

# Nixtla Ecosystem - Forecasting Models
# ----------------------------------------------------------------------------
nixtla>=2.0.0                      # Nixtla TimeGPT API client
statsforecast>=1.6.0               # Statistical forecasting models (ARIMA, ETS, Theta)
neuralforecast>=1.6.0              # Neural forecasting models (LSTM, GRU, N-HiTS, N-BEATS)
datasetsforecast>=0.0.8            # Forecasting datasets utilities

# Machine Learning Libraries
# ----------------------------------------------------------------------------
#scikit-learn>=1.3.0,<2.0.0         # Machine learning algorithms
#xgboost>=2.0.0,<3.0.0              # XGBoost gradient boosting
#lightgbm>=4.0.0                    # LightGBM (optional alternative to XGBoost)

# Deep Learning Backend for NeuralForecast
# ----------------------------------------------------------------------------
#torch>=2.0.0,<3.0.0                # PyTorch for neural networks
#pytorch-lightning>=2.0.0           # PyTorch Lightning for training

# Data Processing & Optimization
# ----------------------------------------------------------------------------
#numba>=0.58.0                      # JIT compilation for speed
#bottleneck>=1.3.5                  # Fast NumPy array functions
#pyarrow>=14.0.0                    # Efficient data serialization

# Time Series Specific
# ----------------------------------------------------------------------------
#statsmodels>=0.14.0                # Statistical models
#pmdarima>=2.0.0                    # Auto-ARIMA implementation
##tslearn>=0.6.0                     # Time series machine learning

# Visualization Enhancements
# ----------------------------------------------------------------------------
#matplotlib>=3.7.0,<4.0.0           # Static plotting
#seaborn>=0.12.0                    # Statistical visualization
#altair>=5.0.0                      # Declarative visualization

# API & Async Support
# ----------------------------------------------------------------------------
#httpx>=0.24.0                      # HTTP client for API calls
#aiohttp>=3.9.0                     # Async HTTP client/server
#python-dotenv>=1.0.0               # Environment variable management
#pydantic>=2.0.0                    # Data validation

# Database Support (Optional)
# ----------------------------------------------------------------------------
#sqlalchemy>=2.0.0                  # SQL toolkit
#psycopg2-binary>=2.9.0            # PostgreSQL adapter
#pymongo>=4.5.0                     # MongoDB driver

# Performance Monitoring
# ----------------------------------------------------------------------------
#memory-profiler>=0.61.0            # Memory usage profiling
#line-profiler>=4.1.0               # Line-by-line profiling

# Testing & Quality (Development)
# ----------------------------------------------------------------------------
#pytest>=7.4.0                      # Testing framework
#pytest-cov>=4.1.0                  # Coverage reporting
#black>=23.0.0                      # Code formatting
#flake8>=6.1.0                      # Code linting
#mypy>=1.5.0                        # Static type checking

# Deployment & Production
# ----------------------------------------------------------------------------
#gunicorn>=21.2.0                   # WSGI HTTP Server
#python-multipart>=0.0.6            # Multipart form data parsing
#watchdog>=3.0.0                    # File system monitoring
#cloudpickle>=3.0.0                 # Extended pickling support

# Utilities
# ----------------------------------------------------------------------------
#tqdm>=4.66.0                       # Progress bars
#tabulate>=0.9.0                    # Pretty-print tabular data
#python-dateutil>=2.8.2             # Date utilities
#pytz>=2023.3                       # Timezone definitions
#humanize>=4.8.0                    # Human-readable formats
#colorama>=0.4.6                    # Colored terminal output

# Optional Advanced Features
# ----------------------------------------------------------------------------
# Uncomment if needed:
# tensorflow>=2.13.0                # TensorFlow support
# keras>=2.13.0                     # Keras deep learning
# ray[tune]>=2.7.0                  # Distributed computing
# optuna>=3.3.0                     # Hyperparameter optimization
# mlflow>=2.7.0                     # ML experiment tracking
# wandb>=0.15.0                     # Weights & Biases tracking
# dask>=2023.9.0                    # Parallel computing
# rapids-cudf>=23.10.0              # GPU acceleration (NVIDIA)

# ============================================================================
# Installation Instructions:
# ----------------------------------------------------------------------------
# 1. Basic Installation:
#    pip install -r requirements.txt
#
# 2. For GPU Support (CUDA):
#    pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
#
# 3. For Apple Silicon (M1/M2):
#    pip install torch torchvision torchaudio
#
# 4. For Development Environment:
#    pip install -r requirements.txt
#    pip install -e .[dev]
#
# 5. For Production Deployment:
#    pip install --no-cache-dir -r requirements.txt
#
# 6. To create a fresh environment:
#    python -m venv venv
#    source venv/bin/activate  # On Windows: venv\Scripts\activate
#    pip install --upgrade pip
#    pip install -r requirements.txt
# ============================================================================

# Version Compatibility Notes:
# ----------------------------------------------------------------------------
# - Python 3.8+ required (3.10+ recommended for best performance)
# - CUDA 11.8+ for GPU acceleration with PyTorch
# - Some models may require additional system libraries:
#   - Ubuntu/Debian: apt-get install python3-dev gcc
#   - macOS: xcode-select --install
#   - Windows: Install Visual Studio Build Tools
# ============================================================================






